<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sist.web.dao.InsBoardDao">
	
	<resultMap type="com.sist.web.model.InsBoard" id="BoardResultMap">
		<id column="BOARD_NUM" property="boardNum" />
		<result column="USER_ID" property="userId" />
		<result column="BOARD_CONTENT" property="boardContent" />
		<result column="LIKE_CNT" property="likeCnt" />
		<result column="REG_DATE" property="regDate" />
		<result column="FILE_NUM" property="fileNum" />
		<result column="FILE_NAME" property="fileName" />
		<result column="USER_FILE_NAME" property="userFileName" />
		<result column="COMMENT_CNT" property="commentCnt" />
	</resultMap>
	
	<resultMap type="com.sist.web.model.InsBoardFile" id="BoardFileResultMap">
		<result column="BOARD_NUM" property="boardNum" />
		<result column="FILE_NUM" property="fileNum" />
		<result column="FILE_ORG_NAME" property="fileOrgName" />
		<result column="FILE_NAME" property="fileName" />
		<result column="FILE_EXT" property="fileExt" />
		<result column="FILE_SIZE" property="fileSize" />
		<result column="REG_DATE" property="regDate" />
	</resultMap>
	
	<resultMap type="com.sist.web.model.InsComment" id="commentResultMap">
		<id column="COMMENT_NUM" property="commentNum" />
		<result column="BOARD_NUM" property="boardNum" />
		<result column="USER_ID" property="userId" />
		<result column="COMMENT_CONTENT" property="commentContent" />
		<result column="COMMENT_GROUP" property="commentGroup" />
		<result column="COMMENT_PARENT" property="commentParent" />
		<result column="STATUS" property="status" />
		<result column="REG_DATE" property="regDate" />
		<result column="FILE_NAME" property="fileName" />
	</resultMap>
	

	<!-- 게시물 조회 리스트 -->
<!-- 	<select id="boardListSelect" parameterType="String" resultMap="BoardResultMap"> -->
<!-- 		SELECT BOARD_NUM, -->
<!-- 		       FILE_NUM, -->
<!-- 		       FILE_NAME, -->
<!-- 		       USER_FILE_NAME, -->
<!-- 		       USER_ID, -->
<!-- 		       BOARD_CONTENT, -->
<!-- 		       LIKE_CNT, -->
<!-- 		       REG_DATE -->
<!-- 		  FROM (SELECT ROWNUM AS RNUM, -->
<!-- 		               BOARD_NUM, -->
<!-- 		               FILE_NUM, -->
<!-- 		               FILE_NAME, -->
<!-- 		               USER_FILE_NAME, -->
<!-- 		               USER_ID, -->
<!-- 		               BOARD_CONTENT, -->
<!-- 		               LIKE_CNT, -->
<!-- 		               REG_DATE -->
<!-- 		          FROM (SELECT A.BOARD_NUM, -->
<!-- 		                       B.FILE_NUM, -->
<!-- 		                       NVL(B.FILE_NAME, '') AS FILE_NAME, -->
<!-- 		                       NVL(C.FILE_NAME, '') AS USER_FILE_NAME, -->
<!-- 		                       NVL(A.USER_ID, '') AS USER_ID, -->
<!-- 		                       NVL(A.BOARD_CONTENT, '') AS BOARD_CONTENT, -->
<!-- 		                       NVL(A.LIKE_CNT, 0) AS LIKE_CNT, -->
<!-- 		                       NVL(TO_CHAR(A.REG_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS'), '') AS REG_DATE -->
<!-- 		                  FROM INS_BOARD A, INS_BOARD_FILE B, INS_USER_FILE C -->
<!-- 		                 WHERE 1=1  -->
<!-- 		                   AND A.BOARD_NUM = B.BOARD_NUM -->
<!-- 		                   AND A.USER_ID = C.USER_ID(+) -->
<!-- 	<if test='userId != null and userId != "" '> -->
<!-- 		                   AND A.USER_ID = #{value} -->
<!-- 	</if> -->
<!-- 		                 ORDER BY REG_DATE DESC )) -->
<!-- 	</select> -->
	
	
	<select id="boardListSelect" parameterType="String" resultMap="BoardResultMap">
		SELECT BOARD_NUM,
		       FILE_NUM,
		       FILE_NAME,
		       USER_FILE_NAME,
		       USER_ID,
		       BOARD_CONTENT,
		       LIKE_CNT,
		       REG_DATE,
		       COMMENT_CNT
		  FROM (SELECT ROWNUM AS RNUM,
		               BOARD_NUM,
		               FILE_NUM,
		               FILE_NAME,
		               USER_FILE_NAME,
		               USER_ID,
		               BOARD_CONTENT,
		               LIKE_CNT,
		               REG_DATE,
		               COMMENT_CNT
		          FROM (SELECT A.BOARD_NUM,
		                       B.FILE_NUM,
		                       NVL(B.FILE_NAME, '') AS FILE_NAME,
		                       NVL(C.FILE_NAME, '') AS USER_FILE_NAME,
		                       NVL(A.USER_ID, '') AS USER_ID,
		                       NVL(A.BOARD_CONTENT, '') AS BOARD_CONTENT,
		                       NVL(A.LIKE_CNT, 0) AS LIKE_CNT,
		                       NVL(TO_CHAR(A.REG_DATE, 'YYYY"년" MM"월" DD"일"'), '') AS REG_DATE,
		                       NVL(AA.COMMENT_CNT, 0) AS COMMENT_CNT
		                  FROM INS_BOARD A, INS_BOARD_FILE B, INS_USER_FILE C, 
		                       (SELECT A.BOARD_NUM AS BOARD_NUM, NVL(COUNT(B.COMMENT_NUM), 0) AS COMMENT_CNT
		                        FROM INS_BOARD A, INS_COMMENT B
		                        WHERE A.BOARD_NUM = B.BOARD_NUM(+)
		                        GROUP BY A.BOARD_NUM ) AA
		                 WHERE 1=1 
		                   AND A.BOARD_NUM = B.BOARD_NUM 
		                   AND A.BOARD_NUM = AA.BOARD_NUM(+)
		                   AND A.USER_ID = C.USER_ID(+)
	<if test='userId != null and userId != "" '>
		                   AND A.USER_ID = #{value}
	</if>
		                 ORDER BY REG_DATE DESC ))
	</select>
	
	<!-- 총 게시물 수 조회 -->
	<select id="boardTotalCnt" parameterType="String" resultType="long">
		SELECT COUNT(A.BOARD_NUM)
		  FROM INS_BOARD A, INS_BOARD_FILE B
		 WHERE 1=1
		   AND A.BOARD_NUM = B.BOARD_NUM
	<if test='userId != null and userId != "" '>
		   AND USER_ID = #{value} 
	</if>
	</select>
	
	
	<!-- 게시물 첨부파일 select -->
	<select id="boardFileSelect" parameterType="long" resultMap="BoardFileResultMap">
		SELECT BOARD_NUM,
		       FILE_NUM,
		       FILE_ORG_NAME,
		       FILE_NAME,
		       FILE_EXT,
		       FILE_SIZE,
		       REG_DATE
		  FROM INS_BOARD_FILE
		 WHERE 1=1
		   AND BOARD_NUM = #{value}
	</select>
	
	<!-- 게시물 단건 조회 select -->
	<select id="boardOneSelect" parameterType="long" resultMap="BoardResultMap">
		SELECT A.BOARD_NUM,
		       B.FILE_NUM,
		       NVL(A.USER_ID, '') AS USER_ID,
		       NVL(A.BOARD_CONTENT, '') AS BOARD_CONTENT,
		       NVL(A.LIKE_CNT, 0) AS LIKE_CNT,
		       NVL(TO_CHAR(A.REG_DATE, 'YYYY/MM/DD HH24:MI:SS'), '') AS REG_DATE,
		       NVL(B.FILE_NAME, '') AS FILE_NAME
		  FROM INS_BOARD A
		  LEFT JOIN INS_BOARD_FILE B
		    ON A.BOARD_NUM = B.BOARD_NUM
		 WHERE 1=1 
		   AND A.BOARD_NUM = #{value} 
	</select>
	
	<!-- 댓글 조회 select -->
	<select id="commentList" parameterType="long" resultMap="commentResultMap">
		SELECT A.COMMENT_NUM,
		       NVL(A.BOARD_NUM, 0) AS BOARD_NUM,
		       NVL(A.USER_ID, '') AS USER_ID,
		       NVL(B.FILE_NAME, '') AS FILE_NAME,
		       NVL(A.COMMENT_CONTENT, '') AS COMMENT_CONTENT,
		       NVL(A.COMMENT_GROUP, 0) AS COMMENT_GROUP,
		       NVL(A.COMMENT_PARENT, 0) AS COMMENT_PARENT,
		       NVL(A.STATUS, '') AS STATUS,
		       NVL(TO_CHAR(A.REG_DATE, 'YYYY/MM/DD HH24:MI:SS'), '') AS REG_DATE
		  FROM INS_COMMENT A LEFT OUTER JOIN INS_USER_FILE B
		    ON A.USER_ID = B.USER_ID
		 WHERE 1=1
		   AND A.BOARD_NUM = #{value}
		 ORDER BY COMMENT_GROUP ASC, REG_DATE ASC 
	</select>
	
	
	<!-- 게시물 등록 insert -->
	<insert id="boardInsert" parameterType="com.sist.web.model.InsBoard">
		<selectKey resultType="long" keyProperty="boardNum" order="BEFORE">	
			SELECT INS_BOARD_SEQ.NEXTVAL FROM DUAL
		</selectKey>
	
		INSERT INTO INS_BOARD (
		    BOARD_NUM,
		    USER_ID,
		    BOARD_CONTENT,
		    LIKE_CNT,
		    REG_DATE
		) VALUES (
		    #{boardNum},
		    #{userId},
		    #{boardContent},
		    #{likeCnt},
		    SYSDATE
		) 
	</insert>
	
	<!-- 게시물 첨부파일 insert -->
	<insert id="boardFileInsert" parameterType="com.sist.web.model.InsBoardFile">
		INSERT INTO INS_BOARD_FILE (
		    BOARD_NUM,
		    FILE_NUM,
		    FILE_ORG_NAME,
		    FILE_NAME,
		    FILE_EXT,
		    FILE_SIZE,
		    REG_DATE
		) VALUES (
		    #{boardNum},
		    (SELECT NVL(MAX(FILE_NUM), 0)+1 AS FILE_NUM FROM INS_BOARD_FILE WHERE BOARD_NUM = #{boardNum} ),
		    #{fileOrgName},
		    #{fileName},
		    #{fileExt},
		    #{fileSize},
		    SYSDATE
		) 
	</insert>
	
	
	<!-- 게시물 삭제 -->
	<delete id="boardDelete" parameterType="long">
		DELETE FROM INS_BOARD
		WHERE BOARD_NUM = #{value} 
	</delete>
	
	<delete id="boardFileDelete" parameterType="long">
		DELETE FROM INS_BOARD_FILE
		WHERE BOARD_NUM = #{value} 
	</delete>
	
	<delete id="boardLikeDelete" parameterType="long">
		DELETE FROM INS_LIKE
		WHERE BOARD_NUM = #{value} 
	</delete>
	
	<delete id="commentDelete"  parameterType="long">
		DELETE FROM INS_COMMENT
		WHERE BOARD_NUM = #{value} 
	</delete>
	
	
	<!-- 댓글 등록 -->
	<insert id="commentInsert" parameterType="com.sist.web.model.InsComment">
		<selectKey resultType="long" keyProperty="commentNum" order="BEFORE">	
			SELECT INS_COMMENT_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		
		INSERT INTO INS_COMMENT (
		    COMMENT_NUM,
		    BOARD_NUM,
		    USER_ID,
		    COMMENT_CONTENT,
		    COMMENT_GROUP,
		    COMMENT_PARENT,
		    STATUS,
		    REG_DATE
		) VALUES (
		    #{commentNum},
		    #{boardNum},
		    #{userId},
		    #{commentContent},
		    (SELECT NVL(MAX(COMMENT_GROUP), 0) + 1 AS COMMENT_GROUP FROM INS_COMMENT WHERE BOARD_NUM = #{boardNum} ),
		    #{commentParent},
		    #{status},
		    SYSDATE
		) 
	</insert>
	
	<!-- 대댓글 등록 -->
	<insert id="replyCommentInsert"  parameterType="com.sist.web.model.InsComment">
		<selectKey resultType="long" keyProperty="commentNum" order="BEFORE">	
			SELECT INS_COMMENT_SEQ.NEXTVAL FROM DUAL
		</selectKey>		
		
		INSERT INTO INS_COMMENT (
		    COMMENT_NUM,
		    BOARD_NUM,
		    USER_ID,
		    COMMENT_CONTENT,
		    COMMENT_GROUP,
		    COMMENT_PARENT,
		    STATUS,
		    REG_DATE
		) VALUES (
		    #{commentNum},
		    #{boardNum},
		    #{userId},
		    #{commentContent},
		    #{commentGroup},
		    #{commentParent},
		    #{status},
		    SYSDATE
		) 
	</insert>
	
	<!-- 댓글 갯수 조회 -->
	<select id="commentCnt" parameterType="long" resultType="int">
		SELECT COUNT(NVL(COMMENT_NUM, 0)) AS TOTALCNT
		  FROM INS_COMMENT
		 WHERE BOARD_NUM = #{value} 
	</select>
	
</mapper>
